{"version":3,"file":"index.js","sources":["../src/devComms.ts","../src/utils.ts","../src/comms.ts"],"sourcesContent":["import type {\n  GetTablesRequest,\n  GetColumnsRequest,\n  GetConnectionInfoRequest,\n  GetAllTabsRequest,\n  RunQueryRequest,\n  ExpandTableResultRequest,\n  SetTabTitleRequest,\n} from \"./requestTypes\";\nimport type {\n  GetTablesResponse,\n  GetColumnsResponse,\n  GetConnectionInfoResponse,\n  GetAllTabsResponse,\n  RunQueryResponse,\n  ExpandTableResultResponse,\n  SetTabTitleResponse,\n} from \"./responseTypes\";\n\ntype RequestMap = {\n  getTables: GetTablesRequest;\n  getColumns: GetColumnsRequest;\n  getConnectionInfo: GetConnectionInfoRequest;\n  getAllTabs: GetAllTabsRequest;\n  runQuery: RunQueryRequest;\n  expandTableResult: ExpandTableResultRequest;\n  setTabTitle: SetTabTitleRequest;\n};\n\ntype ResponseMap = {\n  getTables: GetTablesResponse;\n  getColumns: GetColumnsResponse;\n  getConnectionInfo: GetConnectionInfoResponse;\n  getAllTabs: GetAllTabsResponse;\n  runQuery: RunQueryResponse;\n  expandTableResult: ExpandTableResultResponse;\n  setTabTitle: SetTabTitleResponse;\n}\n\nconst responses: {\n  [K in keyof RequestMap]: ResponseMap[K];\n} = {\n  getConnectionInfo: {\n    connectionType: \"sqlite\",\n    readOnlyMode: false,\n    databaseName: \"db.sqlite\",\n    defaultSchema: \"\",\n  },\n  getTables: [{ name: \"countries\" }, { name: \"users\" }],\n  getColumns: [\n    {\n      name: \"id\",\n      type: \"integer\",\n    },\n  ],\n  getAllTabs: [],\n  runQuery: {\n    results: [\n      {\n        fields: [{ id: \"id\", name: \"id\", dataType: \"integer\" }],\n        rows: [],\n      },\n    ],\n  },\n  expandTableResult: undefined,\n  setTabTitle: undefined,\n};\n\nexport async function request(name: \"getTables\", args?: GetTablesRequest[\"args\"]): Promise<GetTablesResponse>;\nexport async function request(name: \"getColumns\", args: GetColumnsRequest[\"args\"]): Promise<GetColumnsResponse>;\nexport async function request(name: \"getConnectionInfo\"): Promise<GetConnectionInfoResponse>;\nexport async function request(name: \"getAllTabs\"): Promise<GetAllTabsResponse>;\nexport async function request(name: \"runQuery\", args: RunQueryRequest[\"args\"]): Promise<RunQueryResponse>;\nexport async function request(name: \"expandTableResult\", args: ExpandTableResultRequest[\"args\"]): Promise<ExpandTableResultResponse>;\nexport async function request(name: \"setTabTitle\", args: SetTabTitleRequest[\"args\"]): Promise<SetTabTitleResponse>;\nexport async function request(name: unknown, args?: unknown): Promise<unknown> {\n  if (name === \"setTabTitle\") {\n    document.title = args.title || \"Plugin\";\n    return responses[\"setTabTitle\"];\n  }\n  return responses[name];\n}\n","export function generateUUID() {\n  const buf = new Uint8Array(16);\n  crypto.getRandomValues(buf);\n\n  buf[6] = (buf[6] & 0x0f) | 0x40; // version 4\n  buf[8] = (buf[8] & 0x3f) | 0x80; // variant\n\n  const hex = Array.from(buf, (b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n\n  return [\n    hex.substring(0, 8),\n    hex.substring(8, 12),\n    hex.substring(12, 16),\n    hex.substring(16, 20),\n    hex.substring(20),\n  ].join(\"-\");\n}\n","import { request as requestDevMode } from \"./devComms\";\nimport type {\n  GetTablesRequest,\n  GetColumnsRequest,\n  RunQueryRequest,\n  ExpandTableResultRequest,\n  SetTabTitleRequest,\n} from \"./requestTypes\";\nimport type {\n  GetTablesResponse,\n  GetColumnsResponse,\n  GetConnectionInfoResponse,\n  GetAllTabsResponse,\n  RunQueryResponse,\n  ExpandTableResultResponse,\n  SetTabTitleResponse,\n} from \"./responseTypes\";\nimport { generateUUID } from \"./utils\";\n\n// Define a custom import.meta interface for TypeScript\ndeclare global {\n  interface ImportMeta {\n    env: {\n      MODE: string;\n    };\n  }\n}\n\nconst pendingRequests = new Map<\n  string,\n  {\n    name: string;\n    resolve: (value: any) => void;\n    reject: (reason?: any) => void;\n  }\n>();\n\nlet debugComms = false;\n\nexport function setDebugComms(value: boolean) {\n  debugComms = value;\n}\n\nwindow.addEventListener(\"message\", (event) => {\n  const { id, name, args, result, error } = event.data || {};\n\n  if (name) {\n    if (debugComms) {\n      const time = new Date().toLocaleTimeString(\"en-GB\");\n      console.groupCollapsed(`${time} [NOTIFICATION] ${name}`);\n      console.log(\"Args:\", args);\n      console.groupEnd();\n    }\n\n    const handlers = notificationListeners.get(name);\n    if (handlers) {\n      handlers.forEach((handler) => handler(args));\n    }\n  }\n\n  if (id && pendingRequests.has(id)) {\n    const { resolve, reject, name } = pendingRequests.get(id)!;\n    pendingRequests.delete(id);\n\n    if (debugComms) {\n      const time = new Date().toLocaleTimeString(\"en-GB\");\n      console.groupCollapsed(`${time} [RESPONSE] ${name}`);\n      console.log(\"Result:\", result);\n      if (error) console.error(\"Error:\", error);\n      console.groupEnd();\n    }\n\n    if (error) {\n      reject(error);\n    } else {\n      resolve(result);\n    }\n  }\n});\n\nexport async function request(name: \"getTables\", args?: GetTablesRequest[\"args\"]): Promise<GetTablesResponse>;\nexport async function request(name: \"getColumns\", args: GetColumnsRequest[\"args\"]): Promise<GetColumnsResponse>;\nexport async function request(name: \"getConnectionInfo\"): Promise<GetConnectionInfoResponse>;\nexport async function request(name: \"getAllTabs\"): Promise<GetAllTabsResponse>;\nexport async function request(name: \"runQuery\", args: RunQueryRequest[\"args\"]): Promise<RunQueryResponse>;\nexport async function request(name: \"expandTableResult\", args: ExpandTableResultRequest[\"args\"]): Promise<ExpandTableResultResponse>;\nexport async function request(name: \"setTabTitle\", args: SetTabTitleRequest[\"args\"]): Promise<SetTabTitleResponse>;\nexport async function request(name: unknown, args?: unknown): Promise<unknown> {\n  if (import.meta.env?.MODE === \"development\") {\n    const result = await requestDevMode(name as any, args as any);\n    // console.log(\"result\", result);\n    return result;\n  }\n\n  if (debugComms) {\n    const time = new Date().toLocaleTimeString(\"en-GB\");\n    console.groupCollapsed(`${time} [REQUEST] ${name}`);\n    console.log(\"Args:\", args);\n    console.groupEnd();\n  }\n\n  return new Promise<any>((resolve, reject) => {\n    try {\n      const id = generateUUID();\n      const data = { id, name, args };\n      pendingRequests.set(id, { name: name as string, resolve, reject });\n      window.parent.postMessage(data, \"*\");\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\nexport function notify(name: string, args: any) {\n  if (debugComms) {\n    const time = new Date().toLocaleTimeString(\"en-GB\");\n    console.groupCollapsed(`${time} [NOTIFICATION] ${name}`);\n    console.log(\"Args:\", args);\n    console.groupEnd();\n  }\n  window.parent.postMessage({ name, args }, \"*\");\n}\n\nconst notificationListeners = new Map<string, ((args: any) => void)[]>();\n\nexport async function addNotificationListener(\n  name: string,\n  handler: (args: any) => void,\n) {\n  if (!notificationListeners.get(name)) {\n    notificationListeners.set(name, []);\n  }\n  notificationListeners.get(name)!.push(handler);\n}\n"],"names":["request","requestDevMode"],"mappings":"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"}