{"version":3,"file":"eventForwarder.umd.js","sources":["../src/comms.ts","../src/eventForwarder.ts"],"sourcesContent":["import { request as requestDevMode } from \"./devComms\";\nimport type {\n  GetTablesRequest,\n  GetColumnsRequest,\n  RunQueryRequest,\n  ExpandTableResultRequest,\n  SetTabTitleRequest,\n} from \"./requestTypes\";\nimport type {\n  GetTablesResponse,\n  GetColumnsResponse,\n  GetConnectionInfoResponse,\n  GetAllTabsResponse,\n  RunQueryResponse,\n  ExpandTableResultResponse,\n  SetTabTitleResponse,\n} from \"./responseTypes\";\n\n// Define a custom import.meta interface for TypeScript\ndeclare global {\n  interface ImportMeta {\n    env: {\n      MODE: string;\n    };\n  }\n}\n\nconst pendingRequests = new Map<\n  string,\n  {\n    name: string;\n    resolve: (value: any) => void;\n    reject: (reason?: any) => void;\n  }\n>();\n\nlet debugComms = false;\n\nexport function setDebugComms(value: boolean) {\n  debugComms = value;\n}\n\nwindow.addEventListener(\"message\", (event) => {\n  const { id, name, args, result, error } = event.data || {};\n\n  if (name) {\n    if (debugComms) {\n      const time = new Date().toLocaleTimeString(\"en-GB\");\n      console.groupCollapsed(`${time} [NOTIFICATION] ${name}`);\n      console.log(\"Args:\", args);\n      console.groupEnd();\n    }\n\n    const handlers = notificationListeners.get(name);\n    if (handlers) {\n      handlers.forEach((handler) => handler(args));\n    }\n  }\n\n  if (id && pendingRequests.has(id)) {\n    const { resolve, reject, name } = pendingRequests.get(id)!;\n    pendingRequests.delete(id);\n\n    if (debugComms) {\n      const time = new Date().toLocaleTimeString(\"en-GB\");\n      console.groupCollapsed(`${time} [RESPONSE] ${name}`);\n      console.log(\"Result:\", result);\n      if (error) console.error(\"Error:\", error);\n      console.groupEnd();\n    }\n\n    if (error) {\n      reject(error);\n    } else {\n      resolve(result);\n    }\n  }\n});\n\nexport async function request(name: \"getTables\", args?: GetTablesRequest[\"args\"]): Promise<GetTablesResponse>;\nexport async function request(name: \"getColumns\", args: GetColumnsRequest[\"args\"]): Promise<GetColumnsResponse>;\nexport async function request(name: \"getConnectionInfo\"): Promise<GetConnectionInfoResponse>;\nexport async function request(name: \"getAllTabs\"): Promise<GetAllTabsResponse>;\nexport async function request(name: \"runQuery\", args: RunQueryRequest[\"args\"]): Promise<RunQueryResponse>;\nexport async function request(name: \"expandTableResult\", args: ExpandTableResultRequest[\"args\"]): Promise<ExpandTableResultResponse>;\nexport async function request(name: \"setTabTitle\", args: SetTabTitleRequest[\"args\"]): Promise<SetTabTitleResponse>;\nexport async function request(name: unknown, args?: unknown): Promise<unknown> {\n  if (import.meta.env?.MODE === \"development\") {\n    const result = await requestDevMode(name as any, args as any);\n    // console.log(\"result\", result);\n    return result;\n  }\n\n  if (debugComms) {\n    const time = new Date().toLocaleTimeString(\"en-GB\");\n    console.groupCollapsed(`${time} [REQUEST] ${name}`);\n    console.log(\"Args:\", args);\n    console.groupEnd();\n  }\n\n  return new Promise<any>((resolve, reject) => {\n    try {\n      const id = crypto.randomUUID();\n      const data = { id, name, args };\n      pendingRequests.set(id, { name: name as string, resolve, reject });\n      window.parent.postMessage(data, \"*\");\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\nexport function notify(name: string, args: any) {\n  if (debugComms) {\n    const time = new Date().toLocaleTimeString(\"en-GB\");\n    console.groupCollapsed(`${time} [NOTIFICATION] ${name}`);\n    console.log(\"Args:\", args);\n    console.groupEnd();\n  }\n  window.parent.postMessage({ name, args }, \"*\");\n}\n\nconst notificationListeners = new Map<string, ((args: any) => void)[]>();\n\nexport async function addNotificationListener(\n  name: string,\n  handler: (args: any) => void,\n) {\n  if (!notificationListeners.get(name)) {\n    notificationListeners.set(name, []);\n  }\n  notificationListeners.get(name)!.push(handler);\n}\n","/** Any events that need to be forwarded to parent/plugin system\n * must go here */\n\n/** FIXME this file must be injected from the plugin system automatically */\n\nimport { notify } from \"./comms\";\nimport { WindowEventInits, WindowEventClass } from \"./commonTypes\";\n\nfunction createEventInit<T>(event: T): {\n  eventClass: WindowEventClass;\n  eventInitOptions: WindowEventInits;\n} {\n  if (event instanceof MouseEvent) {\n    const eventInitOptions: MouseEventInit = {\n      clientX: event.clientX,\n      clientY: event.clientY,\n      screenX: event.screenX,\n      screenY: event.screenY,\n      button: event.button,\n      buttons: event.buttons,\n      altKey: event.altKey,\n      ctrlKey: event.ctrlKey,\n      shiftKey: event.shiftKey,\n      metaKey: event.metaKey,\n      movementX: event.movementX,\n      movementY: event.movementY,\n      detail: event.detail,\n    };\n    return {\n      eventClass: \"MouseEvent\",\n      eventInitOptions,\n    };\n  }\n\n  if (event instanceof PointerEvent) {\n    const eventInitOptions: PointerEventInit = {\n      clientX: event.clientX,\n      clientY: event.clientY,\n      screenX: event.screenX,\n      screenY: event.screenY,\n      button: event.button,\n      buttons: event.buttons,\n      altKey: event.altKey,\n      ctrlKey: event.ctrlKey,\n      shiftKey: event.shiftKey,\n      metaKey: event.metaKey,\n      movementX: event.movementX,\n      movementY: event.movementY,\n      detail: event.detail,\n      pointerId: event.pointerId,\n      pointerType: event.pointerType,\n      isPrimary: event.isPrimary,\n    };\n    return {\n      eventClass: \"PointerEvent\",\n      eventInitOptions,\n    };\n  }\n\n  if (event instanceof KeyboardEvent) {\n    const isPasswordField =\n      (event.target as HTMLInputElement)?.type === \"password\";\n\n    if (isPasswordField) {\n      // Avoid logging keystrokes from password fields\n      return {\n        eventClass: \"KeyboardEvent\",\n        eventInitOptions: {},\n      };\n    }\n\n    const eventInitOptions: KeyboardEventInit = {\n      key: event.key,\n      code: event.code,\n      keyCode: event.keyCode,\n      location: event.location,\n      altKey: event.altKey,\n      ctrlKey: event.ctrlKey,\n      shiftKey: event.shiftKey,\n      metaKey: event.metaKey,\n      repeat: event.repeat,\n      isComposing: event.isComposing,\n    };\n\n    return {\n      eventClass: \"KeyboardEvent\",\n      eventInitOptions,\n    };\n  }\n\n  return {\n    eventClass: \"Event\",\n    eventInitOptions: {},\n  };\n}\n\nconst forwardedEvents = [\n  \"contextmenu\",\n  \"click\",\n  \"dblclick\",\n  \"pointercancel\",\n  \"pointerdown\",\n  \"pointerenter\",\n  \"pointerleave\",\n  \"pointermove\",\n  \"pointerout\",\n  \"pointerover\",\n  \"pointerup\",\n  \"mousedown\",\n  \"mouseenter\",\n  \"mouseleave\",\n  \"mousemove\",\n  \"mouseout\",\n  \"mouseover\",\n  \"mouseup\",\n  \"keydown\",\n  \"keypress\",\n  \"keyup\",\n] as const;\n\nforwardedEvents.forEach((eventType) => {\n  document.addEventListener(eventType, (event) => {\n    const eventInit = createEventInit(event);\n    notify(\"windowEvent\", {\n      eventType,\n      eventClass: eventInit.eventClass,\n      eventInitOptions: eventInit.eventInitOptions,\n    });\n  });\n});\n"],"names":[],"mappings":"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"}