{"version":3,"file":"index.umd.js","sources":["../src/devComms.ts","../src/comms.ts"],"sourcesContent":["import type {\n  GetTablesRequest,\n  GetColumnsRequest,\n  GetConnectionInfoRequest,\n  GetAllTabsRequest,\n  RunQueryRequest,\n  ExpandTableResultRequest,\n  SetTabTitleRequest,\n} from \"./requestTypes\";\nimport type {\n  GetTablesResponse,\n  GetColumnsResponse,\n  GetConnectionInfoResponse,\n  GetAllTabsResponse,\n  RunQueryResponse,\n  ExpandTableResultResponse,\n  SetTabTitleResponse,\n} from \"./responseTypes\";\n\ntype RequestMap = {\n  getTables: GetTablesRequest;\n  getColumns: GetColumnsRequest;\n  getConnectionInfo: GetConnectionInfoRequest;\n  getAllTabs: GetAllTabsRequest;\n  runQuery: RunQueryRequest;\n  expandTableResult: ExpandTableResultRequest;\n  setTabTitle: SetTabTitleRequest;\n};\n\ntype ResponseMap = {\n  getTables: GetTablesResponse;\n  getColumns: GetColumnsResponse;\n  getConnectionInfo: GetConnectionInfoResponse;\n  getAllTabs: GetAllTabsResponse;\n  runQuery: RunQueryResponse;\n  expandTableResult: ExpandTableResultResponse;\n  setTabTitle: SetTabTitleResponse;\n}\n\nconst responses: {\n  [K in keyof RequestMap]: ResponseMap[K];\n} = {\n  getConnectionInfo: {\n    connectionType: \"sqlite\",\n    readOnlyMode: false,\n    databaseName: \"db.sqlite\",\n    defaultSchema: \"\",\n  },\n  getTables: [{ name: \"countries\" }, { name: \"users\" }],\n  getColumns: [\n    {\n      name: \"id\",\n      type: \"integer\",\n    },\n  ],\n  getAllTabs: [],\n  runQuery: {\n    results: [\n      {\n        fields: [{ id: \"id\", name: \"id\", dataType: \"integer\" }],\n        rows: [],\n      },\n    ],\n  },\n  expandTableResult: undefined,\n  setTabTitle: undefined,\n};\n\nexport async function request(name: \"getTables\", args?: GetTablesRequest[\"args\"]): Promise<GetTablesResponse>;\nexport async function request(name: \"getColumns\", args: GetColumnsRequest[\"args\"]): Promise<GetColumnsResponse>;\nexport async function request(name: \"getConnectionInfo\"): Promise<GetConnectionInfoResponse>;\nexport async function request(name: \"getAllTabs\"): Promise<GetAllTabsResponse>;\nexport async function request(name: \"runQuery\", args: RunQueryRequest[\"args\"]): Promise<RunQueryResponse>;\nexport async function request(name: \"expandTableResult\", args: ExpandTableResultRequest[\"args\"]): Promise<ExpandTableResultResponse>;\nexport async function request(name: \"setTabTitle\", args: SetTabTitleRequest[\"args\"]): Promise<SetTabTitleResponse>;\nexport async function request(name: unknown, args?: unknown): Promise<unknown> {\n  if (name === \"setTabTitle\") {\n    document.title = args.title || \"Plugin\";\n    return responses[\"setTabTitle\"];\n  }\n  return responses[name];\n}\n","import { request as requestDevMode } from \"./devComms\";\nimport type {\n  GetTablesRequest,\n  GetColumnsRequest,\n  RunQueryRequest,\n  ExpandTableResultRequest,\n  SetTabTitleRequest,\n} from \"./requestTypes\";\nimport type {\n  GetTablesResponse,\n  GetColumnsResponse,\n  GetConnectionInfoResponse,\n  GetAllTabsResponse,\n  RunQueryResponse,\n  ExpandTableResultResponse,\n  SetTabTitleResponse,\n} from \"./responseTypes\";\n\n// Define a custom import.meta interface for TypeScript\ndeclare global {\n  interface ImportMeta {\n    env: {\n      MODE: string;\n    };\n  }\n}\n\nconst pendingRequests = new Map<\n  string,\n  {\n    name: string;\n    resolve: (value: any) => void;\n    reject: (reason?: any) => void;\n  }\n>();\n\nlet debugComms = false;\n\nexport function setDebugComms(value: boolean) {\n  debugComms = value;\n}\n\nwindow.addEventListener(\"message\", (event) => {\n  const { id, name, args, result, error } = event.data || {};\n\n  if (name) {\n    if (debugComms) {\n      const time = new Date().toLocaleTimeString(\"en-GB\");\n      console.groupCollapsed(`${time} [NOTIFICATION] ${name}`);\n      console.log(\"Args:\", args);\n      console.groupEnd();\n    }\n\n    const handlers = notificationListeners.get(name);\n    if (handlers) {\n      handlers.forEach((handler) => handler(args));\n    }\n  }\n\n  if (id && pendingRequests.has(id)) {\n    const { resolve, reject, name } = pendingRequests.get(id)!;\n    pendingRequests.delete(id);\n\n    if (debugComms) {\n      const time = new Date().toLocaleTimeString(\"en-GB\");\n      console.groupCollapsed(`${time} [RESPONSE] ${name}`);\n      console.log(\"Result:\", result);\n      if (error) console.error(\"Error:\", error);\n      console.groupEnd();\n    }\n\n    if (error) {\n      reject(error);\n    } else {\n      resolve(result);\n    }\n  }\n});\n\nexport async function request(name: \"getTables\", args?: GetTablesRequest[\"args\"]): Promise<GetTablesResponse>;\nexport async function request(name: \"getColumns\", args: GetColumnsRequest[\"args\"]): Promise<GetColumnsResponse>;\nexport async function request(name: \"getConnectionInfo\"): Promise<GetConnectionInfoResponse>;\nexport async function request(name: \"getAllTabs\"): Promise<GetAllTabsResponse>;\nexport async function request(name: \"runQuery\", args: RunQueryRequest[\"args\"]): Promise<RunQueryResponse>;\nexport async function request(name: \"expandTableResult\", args: ExpandTableResultRequest[\"args\"]): Promise<ExpandTableResultResponse>;\nexport async function request(name: \"setTabTitle\", args: SetTabTitleRequest[\"args\"]): Promise<SetTabTitleResponse>;\nexport async function request(name: unknown, args?: unknown): Promise<unknown> {\n  if (import.meta.env?.MODE === \"development\") {\n    const result = await requestDevMode(name as any, args as any);\n    // console.log(\"result\", result);\n    return result;\n  }\n\n  if (debugComms) {\n    const time = new Date().toLocaleTimeString(\"en-GB\");\n    console.groupCollapsed(`${time} [REQUEST] ${name}`);\n    console.log(\"Args:\", args);\n    console.groupEnd();\n  }\n\n  return new Promise<any>((resolve, reject) => {\n    try {\n      const id = crypto.randomUUID();\n      const data = { id, name, args };\n      pendingRequests.set(id, { name: name as string, resolve, reject });\n      window.parent.postMessage(data, \"*\");\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\nexport function notify(name: string, args: any) {\n  if (debugComms) {\n    const time = new Date().toLocaleTimeString(\"en-GB\");\n    console.groupCollapsed(`${time} [NOTIFICATION] ${name}`);\n    console.log(\"Args:\", args);\n    console.groupEnd();\n  }\n  window.parent.postMessage({ name, args }, \"*\");\n}\n\nconst notificationListeners = new Map<string, ((args: any) => void)[]>();\n\nexport async function addNotificationListener(\n  name: string,\n  handler: (args: any) => void,\n) {\n  if (!notificationListeners.get(name)) {\n    notificationListeners.set(name, []);\n  }\n  notificationListeners.get(name)!.push(handler);\n}\n"],"names":["request","requestDevMode"],"mappings":"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"}